user www-data;  # ignored cause only root can apply this command (doesn't work since i'm running nginx as normal user)
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 4096;    # Better performance for high concurrency
    multi_accept on;            # Accept multiple conections
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout  65;
    keepalive_requests 100;
    server_tokens off;
    client_max_body_size 10M;

    # fastcgi cache zone: -> cache php scripts in memory to lower processor usage
    fastcgi_cache_path /var/cache/nginx/fastcgi levels=1:2 keys_zone=PHP:10m inactive=60m max_size=100m;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main buffer=16k flush=5m;

    #cache for traffic optimization
    proxy_cache_path /var/cache/nginx/proxy levels=1:2 keys_zone=STATIC:10m max_size=100m inactive=60m use_temp_path=off;

    # Activate compression to reduce traffic
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Active Brotli for better compression - [additional module. Nginx needs to be compile with it to work]
    #brotli on;
    #brotli_comp_level 6;
    #brotli_types text/plain text/css application/json application/javascript text/xml application/xml+rss text/javascript image/svg+xml;
    
    server {
        listen 80 default_server;
        server_name localhost;

        root /var/www/html;
        index index.php index.html index.htm;

        
        client_body_timeout 60;
        send_timeout 60;

        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/run/php/php8.2-fpm.sock;
            # Cache FastCGI
            fastcgi_cache PHP;
            fastcgi_cache_key "$scheme$request_method$host$request_uri";
            fastcgi_cache_valid 200 302 10m;
            fastcgi_cache_valid 404 1m;
            fastcgi_cache_use_stale error timeout invalid_header updating;
            add_header X-FastCGI-Cache $upstream_cache_status;

            
            fastcgi_read_timeout 60;
            proxy_read_timeout 60;
        }

        location ~ /\.ht {
            deny all;
        }

        # location ~* ^.+\.(png|jpg|jpeg)$ {
        #     add_header Vary Accept;
        #     if ($http_accept ~* "webp") {
        #         rewrite ^(.+)\.(png|jpg|jpeg)$ $1.webp break;
        #     }
        # }

        # cache optimization for static files
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff2?|ttf|svg|eot)$ {
            expires 7d;
            access_log off;
            add_header Cache-Control "public, max-age=604800, immutable";
        }

        # proxy cache for dinamic requests
        location /api/ {
            proxy_cache STATIC;
            proxy_pass http://localhost;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            add_header X-Proxy-Cache $upstream_cache_status;
        }
    }
}
